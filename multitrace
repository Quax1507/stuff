#!/usr/bin/env python
# -*- coding: utf8 -*- 

from __future__ import print_function
import os
import sys
import re
import traceback
import subprocess
import pprint
import cStringIO
import time
from scapy.all import *

###### parse arguments
import argparse
parser = argparse.ArgumentParser(description='Multitrace 1.0 - multi protocol traceroute network analyser')
parser.add_argument('--max-hops', default=32, help='Max number of hops, default %(default)s')
parser.add_argument('--interval', type=float, default=0, help='Interval between packets, default %(default)s')
parser.add_argument('--timeout', type=float, default=3, help='Timeout waiting for answers, default %(default)s')
parser.add_argument('host', help='Host to trace')
# parser.add_argument('--verbose', action='store_true', help='verbose output')
# parser.add_argument('--debug', action='store_true', help='debug output (shows commands that are executed)')
args = parser.parse_args()



complete=False
for ttl in range(1,args.max_hops+1):
    print("Hop ", ttl, ": ")
    answers,unans=sr(
        [ 
            IP(dst=args.host, ttl=ttl)/UDP(dport=44443+ttl),
            IP(dst=args.host, ttl=ttl)/TCP(dport=44443+ttl, flags="S"),
            IP(dst=args.host, ttl=ttl)/ICMP(),
        ],
        timeout=args.timeout, inter=args.interval, verbose=0
    )


    for snd, recv in answers:
        print(" ",recv.summary())
        if snd.dst==recv.src:
            complete=True


    if complete:
        break
