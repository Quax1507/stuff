#!/bin/bash

set -e

HOST=$1
DST=$2
NAME=$3

if [ "$NAME" == "" ]; then
    echo "Usage:"
    echo "$0 <host> <localfilesystem> <backupname>"
    echo
    echo "Use 'localhost' to operate locally"
    echo "Set the property 'autobackup:backupname' to true on the filesystems you want to backup"
    echo
    exit 1
fi

PROPERTY=autobackup:$NAME

#if you litterally specify localhost, it means its local without ssh
if [ "$HOST" == "localhost" ]; then
    REMOTE_CMD="eval"
else
    REMOTE_CMD="ssh $HOST"
fi


$REMOTE_CMD "zfs get -t volume,filesystem -o value,name,source -s local,inherited -H $PROPERTY" > /tmp/autobackup.$$

FILESYSTEMS=""
LOCALS=""
#only accept autobackup properties that are set locally or are inherited from locally set properties. this prevents backups of backups in case of received properties:
while read VALUE NAME SOURCE ; do
    if [ "$VALUE" == "true" ]; then
        if [ "$SOURCE" == "local" ]; then
            FILESYSTEMS="$FILESYSTEMS $NAME"
            LOCALS="$LOCALS $NAME "
        else
            #is it inherited from a local fs?
            if echo "$LOCALS" | grep " $INHERITED_NAME " >/dev/null; then
                FILESYSTEMS="$FILESYSTEMS $NAME"
            else
                echo "Ignoring $NAME"
            fi
        fi
    fi
done < /tmp/autobackup.$$

rm /tmp/autobackup.$$


echo "Filesystems to backup:"
echo "$FILESYSTEMS"
exit 0


for FILESYSTEM in $FILESYSTEMS; do
    echo 
    #create destination and parent of the filesystem?
    FILESYSTEM_PARENT=`echo $FILESYSTEM|sed 's@/[^/]*$@@'`
    zfs create -p $DST
    if [ "$FILESYSTEM_PARENT" != "$FILESYSTEM" ]; then
	echo "Creating parent $DST/$FILESYSTEM_PARENT"
        zfs create -p $DST/$FILESYSTEM_PARENT
    fi

    echo "Executing: ./zfs_backup $HOST $FILESYSTEM $DST/$FILESYSTEM $NAME"
    ./zfs_backup $HOST $FILESYSTEM $DST/$FILESYSTEM $NAME
done

echo "All backups done"
